    93.0: flog total
     9.3: flog/method average

    37.8: Chef::Provider::CookbookFile#action_create lib/chef/provider/cookbook_file.rb:34
    10.9:   path
     4.1:   branch
     3.3:   file_cache_location
     3.2:   debug
     1.9:   name
     1.7:   close
     1.7:   mv
     1.7:   stage_file_to_tmpdir
     1.7:   basename
     1.6:   assignment
     1.5:   info
     1.5:   updated_by_last_action
     1.5:   open
     1.5:   backup_new_resource
     1.4:   set_all_access_controls
     1.4:   content_stale?
     1.3:   updated_by_last_action?
     1.3:   assert_enclosing_directory_exists!

    12.9: Chef::Provider::CookbookFile#file_cache_location lib/chef/provider/cookbook_file.rb:61
     2.7:   assignment
     1.8:   run_context
     1.6:   source
     1.6:   cookbook_collection
     1.6:   path
     1.6:   resource_cookbook
     1.6:   node
     1.4:   preferred_filename_on_disk_location
     1.4:   []

     8.5: Chef::Provider::CookbookFile#load_current_resource lib/chef/provider/cookbook_file.rb:27
     4.3:   path
     1.5:   name
     1.3:   gsub!
     1.3:   assignment
     1.3:   new

     7.3: Chef::Provider::CookbookFile#action_create_if_missing lib/chef/provider/cookbook_file.rb:53
     3.1:   path
     1.4:   debug
     1.4:   action_create
     1.3:   exists?
     1.3:   branch

     5.9: Chef::Provider::CookbookFile#backup_new_resource lib/chef/provider/cookbook_file.rb:88
     3.1:   path
     1.4:   backup
     1.3:   exists?
     1.3:   branch

     5.6: Chef::Provider::CookbookFile#set_all_access_controls lib/chef/provider/cookbook_file.rb:82
     1.5:   modified?
     1.3:   updated_by_last_action
     1.3:   assignment
     1.3:   set_all
     1.3:   new

     4.6: Chef::Provider::CookbookFile#content_stale? lib/chef/provider/cookbook_file.rb:94
     1.6:   path
     1.4:   compare_content
     1.4:   exist?
     1.3:   branch

     4.1: Chef::Provider::CookbookFile#stage_file_to_tmpdir lib/chef/provider/cookbook_file.rb:77
     1.5:   file_cache_location
     1.3:   set_all_access_controls
     1.3:   cp

     3.3: main#none
     3.3:   require

     3.1: Chef::Provider::CookbookFile#resource_cookbook lib/chef/provider/cookbook_file.rb:71
     1.4:   cookbook_name
     1.4:   cookbook
     1.3:   branch

