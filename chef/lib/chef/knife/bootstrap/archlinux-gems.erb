bash -c '
<%= "export http_proxy=\"#{knife_config[:bootstrap_proxy]}\"" if knife_config[:bootstrap_proxy] -%>

if [ ! -f /usr/bin/chef-client ]; then
  pacman -Syy
  pacman -S --noconfirm ruby ntp base-devel
  ntpdate -u pool.ntp.org
  gem install ohai --no-rdoc --no-ri --verbose
  gem install chef --no-rdoc --no-ri --verbose <%= bootstrap_version_string %>
fi

mkdir -p /etc/chef
(
cat <<'EOP'
<%= validation_key %>
EOP
) > /tmp/validation.pem
awk NF /tmp/validation.pem > /etc/chef/validation.pem
rm /tmp/validation.pem

<% if @chef_config[:encrypted_data_bag_secret] -%>
(
cat <<'EOP'
<%= encrypted_data_bag_secret %>
EOP
) > /tmp/encrypted_data_bag_secret
awk NF /tmp/encrypted_data_bag_secret > /etc/chef/encrypted_data_bag_secret
rm /tmp/encrypted_data_bag_secret
<% end -%>

(
cat <<'EOP'
log_level        :info
log_location     STDOUT
chef_server_url  "<%= @chef_config[:chef_server_url] %>"
validation_client_name "<%= @chef_config[:validation_client_name] %>"
<% if @config[:chef_node_name] -%>
node_name "<%= @config[:chef_node_name] %>"
<% else -%>
# Using default node name (fqdn)
<% end -%> 
# ArchLinux follows the Filesystem Hierarchy Standard
file_cache_path    "/var/cache/chef"
file_backup_path   "/var/lib/chef/backup"
pid_file           "/var/run/chef/client.pid"
cache_options({ :path => "/var/cache/chef/checksums", :skip_expires => true})
<% if knife_config[:bootstrap_proxy] %>
http_proxy         "<%= knife_config[:bootstrap_proxy] %>"
https_proxy        "<%= knife_config[:bootstrap_proxy] %>"
<% end -%>
EOP
) > /etc/chef/client.rb

(
cat <<'EOP'
<%= { "run_list" => @run_list }.to_json %>
EOP
) > /etc/chef/first-boot.json

<%= start_chef %>'
