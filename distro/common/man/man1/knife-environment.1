.TH "KNIFE-ENVIRONMENT" "1" "Chef 11.8.0" "" "knife environment"
.SH NAME
knife-environment \- The man page for the knife environment subcommand.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructuredText.
.
.sp
An environment is a way to map an organization\(aqs real\-life workflow to what can be configured and managed when using server. Every organization begins with a single environment called the \fB_default\fP environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization\(aqs patterns and workflow. For example, creating \fBproduction\fP, \fBstaging\fP, \fBtesting\fP, and \fBdevelopment\fP environments. Generally, an environment is also associated with one (or more) cookbook versions.
.sp
The \fBknife environment\fP subcommand is used to manage environments within a single organization on the server.
.sp
This subcommand has the following syntax:
.sp
.nf
.ft C
$ knife environment [ARGUMENT] (options)
.ft P
.fi
.SH COMMON OPTIONS
.sp
The following options can be run with all Knife sub\-commands and plug\-ins:
.INDENT 0.0
.TP
.B \fB\-c CONFIG\fP, \fB\-\-config CONFIG\fP
The configuration file to use.
.TP
.B \fB\-\-color\fP
Indicates that colored output will be used.
.TP
.B \fB\-d\fP, \fB\-\-disable\-editing\fP
Indicates that $EDITOR will not be opened; data will be accepted as\-is.
.TP
.B \fB\-\-defaults\fP
Indicates that Knife will use the default value, instead of asking a user to provide one.
.TP
.B \fB\-e EDITOR\fP, \fB\-\-editor EDITOR\fP
The $EDITOR that is used for all interactive commands.
.TP
.B \fB\-E ENVIRONMENT\fP, \fB\-\-environment ENVIRONMENT\fP
The name of the environment. When this option is added to a command, the command will run only against the named environment.
.TP
.B \fB\-f FILE_NAME\fP, \fB\-\-file FILE_NAME\fP
Indicates that the private key will be saved to a specified file name.
.TP
.B \fB\-F FORMAT\fP, \fB\-\-format FORMAT\fP
The output format: \fBsummary\fP (default), \fBtext\fP, \fBjson\fP, \fByaml\fP, and \fBpp\fP.
.TP
.B \fB\-h\fP, \fB\-\-help\fP
Shows help for the command.
.TP
.B \fB\-k KEY\fP, \fB\-\-key KEY\fP
The private key that Knife will use to sign requests made by the API client to the server.
.TP
.B \fB\-\-no\-color\fP
Indicates that color will not be used in the output.
.TP
.B \fB\-p PASSWORD\fP, \fB\-\-password PASSWORD\fP
The user password.
.TP
.B \fB\-\-print\-after\fP
Indicates that data will be shown after a destructive operation.
.TP
.B \fB\-s URL\fP, \fB\-\-server\-url URL\fP
The URL for the server.
.TP
.B \fB\-u USER\fP, \fB\-\-user USER\fP
The user name used by Knife to sign requests made by the API client to the server. Authentication will fail if the user name does not match the private key.
.TP
.B \fB\-v\fP, \fB\-\-version\fP
The version of the chef\-client.
.TP
.B \fB\-V\fP, \fB\-\-verbose\fP
Set for more verbose outputs. Use \fB\-VV\fP for maximum verbosity.
.TP
.B \fB\-y\fP, \fB\-\-yes\fP
Indicates that the response to all confirmation prompts will be "Yes" (and that Knife will not ask for confirmation).
.UNINDENT
.SH CREATE
.sp
The \fBcreate\fP argument is used to add an environment object to the server. When this argument is run, Knife will open $EDITOR to enable editing of the \fBENVIRONMENT\fP description field (unless a description is specified as part of the command). When finished, Knife will add the environment to the server.
.sp
\fBSyntax\fP
.sp
This argument has the following syntax:
.sp
.nf
.ft C
$ knife environment create ENVIRONMENT_NAME \-d DESCRIPTION
.ft P
.fi
.sp
\fBOptions\fP
.sp
This argument has the following options:
.INDENT 0.0
.TP
.B \fB\-d DESCRIPTION\fP, \fB\-\-description DESCRIPTION\fP
The description of the environment. This value will populate the description field for the environment on the server.
.UNINDENT
.sp
\fBExamples\fP
.sp
To create an environment named "dev" with a description of "The development environment.":
.sp
.nf
.ft C
$ knife environment create dev \-d "The development environment."
.ft P
.fi
.SH DELETE
.sp
The \fBdelete\fP argument is used to delete an environment from a server.
.sp
\fBSyntax\fP
.sp
This argument has the following syntax:
.sp
.nf
.ft C
$ knife environment delete ENVIRONMENT_NAME
.ft P
.fi
.sp
\fBOptions\fP
.sp
This command does not have any specific options.
.sp
\fBExamples\fP
.sp
To delete an environment named "dev", enter:
.sp
.nf
.ft C
$ knife environment delete dev
.ft P
.fi
.sp
Type \fBY\fP to confirm a deletion.
.SH EDIT
.sp
The \fBedit\fP argument is used to edit the attributes of an environment. When this argument is run, Knife will open $EDITOR to enable editing of \fBENVIRONMENT\fP attributes. When finished, Knife will update the server with those changes.
.sp
\fBSyntax\fP
.sp
This argument has the following syntax:
.sp
.nf
.ft C
$ knife environment edit ENVIRONMENT_NAME
.ft P
.fi
.sp
\fBOptions\fP
.sp
This command does not have any specific options.
.sp
\fBExamples\fP
.sp
To edit an environment named "devops", enter:
.sp
.nf
.ft C
$ knife environment edit devops
.ft P
.fi
.SH FROM FILE
.sp
The \fBfrom file\fP argument is used to add or update an environment using a JSON or Ruby DSL description. It must be run with the \fBcreate\fP or \fBedit\fP arguments.
.sp
\fBSyntax\fP
.sp
This argument has the following syntax:
.sp
.nf
.ft C
$ knife environment [create | edit] from file FILE (options)
.ft P
.fi
.sp
\fBOptions\fP
.sp
This argument has the following options:
.INDENT 0.0
.TP
.B \fB\-a\fP, \fB\-\-all\fP
Indicates that all environments found at the specified path will be uploaded.
.UNINDENT
.sp
\fBExamples\fP
.sp
To add an environment using data contained in a JSON file:
.sp
.nf
.ft C
$ knife environment create devops from file "path to JSON file"
.ft P
.fi
.sp
or:
.sp
.nf
.ft C
$ knife environment edit devops from file "path to JSON file"
.ft P
.fi
.SH LIST
.sp
The \fBlist\fP argument is used to list all of the environments that are currently available on the server.
.sp
\fBSyntax\fP
.sp
This argument has the following syntax:
.sp
.nf
.ft C
$ knife environment list \-w
.ft P
.fi
.sp
\fBOptions\fP
.sp
This argument has the following options:
.INDENT 0.0
.TP
.B \fB\-w\fP, \fB\-\-with\-uri\fP
Indicates that the corresponding URIs will be shown.
.UNINDENT
.sp
\fBExamples\fP
.sp
To view a list of environments:
.sp
.nf
.ft C
$ knife environment list \-w
.ft P
.fi
.SH SHOW
.sp
The \fBshow\fP argument is used to display information about the specified environment.
.sp
\fBSyntax\fP
.sp
This argument has the following syntax:
.sp
.nf
.ft C
$ knife environment show ENVIRONMENT_NAME
.ft P
.fi
.sp
\fBOptions\fP
.sp
This command does not have any specific options.
.sp
\fBExamples\fP
.sp
To view information about the "dev" environment enter:
.sp
.nf
.ft C
$ knife environment show dev
.ft P
.fi
.sp
to return:
.sp
.nf
.ft C
% knife environment show dev
chef_type:            environment
cookbook_versions:
default_attributes:
description:
json_class:           Chef::Environment
name:                 dev
override_attributes:

\e\e
\e\e
\e\e
\e\e
.ft P
.fi
.sp
To view information in JSON format, use the \fB\-F\fP common option as part of the command like this:
.sp
.nf
.ft C
$ knife role show devops \-F json
.ft P
.fi
.sp
Other formats available include \fBtext\fP, \fByaml\fP, and \fBpp\fP.
.SH AUTHOR
Opscode
.\" Generated by docutils manpage writer.
.
