.\" Man page generated from reStructuredText.
.
.TH "KNIFE-DATA-BAG" "1" "Chef 12.0" "" "knife data bag"
.SH NAME
knife-data-bag \- The man page for the knife data bag subcommand.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
A data bag is a global variable that is stored as JSON data and is accessible from a Chef server\&. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search.
.sp
A data bag item may be encrypted using \fI\%shared secret encryption\fP\&. This allows each data bag item to store confidential information (such as a database password) or to be managed in a source control system (without plain\-text data appearing in revision history). Each data bag item may be encrypted individually; if a data bag contains multiple encrypted data bag items, these data bag items are not required to share the same encryption keys.
.sp
The \fBknife data bag\fP subcommand is used to manage arbitrary stores of globally available JSON data.
.SH COMMON OPTIONS
.sp
The following options may be used with any of the arguments available to the \fBknife data bag\fP subcommand:
.INDENT 0.0
.TP
.B \fB\-\-chef\-zero\-port PORT\fP
The port on which chef\-zero will listen.
.TP
.B \fB\-c CONFIG_FILE\fP, \fB\-\-config CONFIG_FILE\fP
The configuration file to use.
.TP
.B \fB\-d\fP, \fB\-\-disable\-editing\fP
Use to prevent the $EDITOR from being opened and to accept data as\-is.
.TP
.B \fB\-\-defaults\fP
Use to have knife use the default value instead of asking a user to provide one.
.TP
.B \fB\-e EDITOR\fP, \fB\-\-editor EDITOR\fP
The $EDITOR that is used for all interactive commands.
.TP
.B \fB\-E ENVIRONMENT\fP, \fB\-\-environment ENVIRONMENT\fP
The name of the environment. When this option is added to a command, the command will run only against the named environment.
.TP
.B \fB\-F FORMAT\fP, \fB\-\-format FORMAT\fP
The output format: \fBsummary\fP (default), \fBtext\fP, \fBjson\fP, \fByaml\fP, and \fBpp\fP\&.
.TP
.B \fB\-h\fP, \fB\-\-help\fP
Shows help for the command.
.TP
.B \fB\-k KEY\fP, \fB\-\-key KEY\fP
The private key that knife will use to sign requests made by the API client to the Chef server\&.
.TP
.B \fB\-\-[no\-]color\fP
Use to view colored output.
.TP
.B \fB\-\-print\-after\fP
Use to show data after a destructive operation.
.TP
.B \fB\-s URL\fP, \fB\-\-server\-url URL\fP
The URL for the Chef server\&.
.TP
.B \fB\-u USER\fP, \fB\-\-user USER\fP
The user name used by knife to sign requests made by the API client to the Chef server\&. Authentication will fail if the user name does not match the private key.
.TP
.B \fB\-V\fP, \fB\-\-verbose\fP
Set for more verbose outputs. Use \fB\-VV\fP for maximum verbosity.
.TP
.B \fB\-v\fP, \fB\-\-version\fP
The version of the chef\-client\&.
.TP
.B \fB\-y\fP, \fB\-\-yes\fP
Use to respond to all confirmation prompts with "Yes". knife will not ask for confirmation.
.TP
.B \fB\-z\fP, \fB\-\-local\-mode\fP
Use to run the chef\-client in local mode. This allows all commands that work against the Chef server to also work against the local chef\-repo\&.
.UNINDENT
.SH CREATE
.sp
The \fBcreate\fP argument is used to add a data bag to the Chef server\&.
.sp
\fBSyntax\fP
.sp
This argument has the following syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag create DATA_BAG_NAME [DATA_BAG_ITEM] (options)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBOptions\fP
.sp
This argument has the following options:
.INDENT 0.0
.TP
.B \fBDATA_BAG_ITEM\fP
The name of a specific item within a data bag.
.TP
.B \fB\-\-secret SECRET\fP
The encryption key that is used for values contained within a data bag item. If \fBsecret\fP is not specified, the chef\-client will look for a secret at the path specified by the \fBencrypted_data_bag_secret\fP setting in the client.rb file.
.TP
.B \fB\-\-secret\-file FILE\fP
The path to the file that contains the encryption key.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
For encrypted data bag items, use \fIeither\fP \fB\-\-secret\fP or \fB\-\-secret\-file\fP, not both.
.UNINDENT
.UNINDENT
.sp
\fBExamples\fP
.sp
To create a data bag named "admins", enter:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag create admins
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
to return:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Created data_bag[admins]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH DELETE
.sp
The \fBdelete\fP argument is used to delete a data bag or a data bag item from a Chef server\&.
.sp
\fBSyntax\fP
.sp
This argument has the following syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag delete DATA_BAG_NAME [DATA_BAG_ITEM] (options)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBOptions\fP
.sp
This argument has the following options:
.INDENT 0.0
.TP
.B \fBDATA_BAG_ITEM\fP
The name of a specific item within a data bag.
.UNINDENT
.sp
\fBExamples\fP
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag delete data_bag_name
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To delete an item named "charlie", enter:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag delete admins charlie
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Type \fBY\fP to confirm a deletion.
.SH EDIT
.sp
The \fBedit\fP argument is used to edit the data contained in a data bag. If encryption is being used, the data bag will be decrypted, the data will be made available in the $EDITOR, and then encrypted again before saving it to the Chef server\&.
.sp
\fBSyntax\fP
.sp
This argument has the following syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag edit DATA_BAG_NAME [DATA_BAG_ITEM] (options)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBOptions\fP
.sp
This argument has the following options:
.INDENT 0.0
.TP
.B \fBDATA_BAG_ITEM\fP
The name of a specific item within a data bag.
.TP
.B \fB\-\-secret SECRET\fP
The encryption key that is used for values contained within a data bag item. If \fBsecret\fP is not specified, the chef\-client will look for a secret at the path specified by the \fBencrypted_data_bag_secret\fP setting in the client.rb file.
.TP
.B \fB\-\-secret\-file FILE\fP
The path to the file that contains the encryption key.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
For encrypted data bag items, use \fIeither\fP \fB\-\-secret\fP or \fB\-\-secret\-file\fP, not both.
.UNINDENT
.UNINDENT
.sp
\fBExamples\fP
.sp
To edit the contents of a data bag, enter:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag edit dogs tibetanspaniel
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
where \fBdogs\fP is the name of the data bag and \fBtibetanspaniel\fP is the name of the data bag item. This will return something similar to the following in the knife editor:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "name":"data_bag_item_dogs_tibetanspaniel",
  "json_class":"Chef::DataBagItem",
  "chef_type":"data_bag_item",
  "data_bag":"dogs",
  "raw_data":
    {
      "description":"small dog that likes to sit in windows",
      "id":"tibetanspaniel"
    }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Make the necessary changes to the key\-value pairs under \fBraw_data\fP and save them.
.sp
To edit an item named "charlie" that is contained in a data bag named "admins", enter:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag edit admins charlie
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
to open the $EDITOR\&. Once opened, you can update the data before saving it to the Chef server\&. For example, by changing:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
   "id": "charlie"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
to:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
   "id": "charlie",
   "uid": 1005,
   "gid": "ops",
   "shell": "/bin/zsh",
   "comment": "Crazy Charlie"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.SH FROM FILE
.sp
The \fBfrom file\fP argument is used to:
.INDENT 0.0
.IP \(bu 2
Add a data bag item to a data bag
.IP \(bu 2
Update the contents of an existing data bag item
.UNINDENT
.sp
The data bag itself must already exist on the Chef server and must be specified as part of the command. The contents of the data bag item are specified using a JSON file. This JSON file may be located at a relative or absolute path; its location must be specified as part of the command. The JSON file that defines the contents of the data bag item must at least contain the name of the data bag item\-\-\-\fB"id": "name"\fP\&.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
A chef\-client must be version 11.6 (or higher) when using the \fBknife data bag from file\fP argument with the Enterprise Chef or Open Source Chef version 11 servers.
.UNINDENT
.UNINDENT
.sp
\fBSyntax\fP
.sp
This argument has the following syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag from file DATA_BAG_NAME_or_PATH
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBOptions\fP
.sp
This argument has the following options:
.INDENT 0.0
.TP
.B \fB\-a\fP, \fB\-\-all\fP
Use to upload all data bags found at the specified path.
.TP
.B \fB\-\-secret SECRET\fP
The encryption key that is used for values contained within a data bag item. If \fBsecret\fP is not specified, the chef\-client will look for a secret at the path specified by the \fBencrypted_data_bag_secret\fP setting in the client.rb file.
.TP
.B \fB\-\-secret\-file FILE\fP
The path to the file that contains the encryption key.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
For encrypted data bag items, use \fIeither\fP \fB\-\-secret\fP or \fB\-\-secret\-file\fP, not both.
.UNINDENT
.UNINDENT
.sp
\fBExamples\fP
.sp
To create a data bag on the Chef server from a file:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag from file "path to JSON file"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To create a data bag named "devops_data" that contains encrypted data, enter:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag from file devops_data \-\-secret\-file "path to decryption file"
.ft P
.fi
.UNINDENT
.UNINDENT
.SH LIST
.sp
The \fBlist\fP argument is used to view a list of data bags that are currently available on the Chef server\&.
.sp
\fBSyntax\fP
.sp
This argument has the following syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag list
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBOptions\fP
.sp
This argument has the following options:
.INDENT 0.0
.TP
.B \fB\-w\fP, \fB\-\-with\-uri\fP
Use to show the corresponding URIs.
.UNINDENT
.sp
\fBExamples\fP
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag list
.ft P
.fi
.UNINDENT
.UNINDENT
.SH SHOW
.sp
The \fBshow\fP argument is used to view the contents of a data bag.
.sp
\fBSyntax\fP
.sp
This argument has the following syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag show DATA_BAG_NAME (options)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBOptions\fP
.sp
This argument has the following options:
.INDENT 0.0
.TP
.B \fBDATA_BAG_ITEM\fP
The name of a specific item within a data bag.
.TP
.B \fB\-\-secret SECRET\fP
The encryption key that is used for values contained within a data bag item. If \fBsecret\fP is not specified, the chef\-client will look for a secret at the path specified by the \fBencrypted_data_bag_secret\fP setting in the client.rb file.
.TP
.B \fB\-\-secret\-file FILE\fP
The path to the file that contains the encryption key.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
For encrypted data bag items, use \fIeither\fP \fB\-\-secret\fP or \fB\-\-secret\-file\fP, not both.
.UNINDENT
.UNINDENT
.sp
\fBExamples\fP
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag show admins
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
to return something like:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
charlie
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To show the contents of a specific item within data bag, enter:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag show admins charlie
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
to return:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
comment:  Crazy Charlie
gid:      ops
id:       charlie
shell:    /bin/zsh
uid:      1005
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To show the contents of a data bag named \fBpasswords\fP with an item that contains encrypted data named \fBmysql\fP, enter:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag show passwords mysql
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
to return:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
## sample:
{
  "id": "mysql",
  "pass": "trywgFA6R70NO28PNhMpGhEvKBZuxouemnbnAUQsUyo=\en",
  "user": "e/p+8WJYVHY9fHcEgAAReg==\en"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To show the decrypted contents of the same data bag, enter:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag show \-\-secret\-file /path/to/decryption/file passwords mysql
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
to return:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
## sample:
{
  "id": "mysql",
  "pass": "thesecret123",
  "user": "fred"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To view information in JSON format, use the \fB\-F\fP common option as part of the command like this:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ knife data bag show admins \-F json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Other formats available include \fBtext\fP, \fByaml\fP, and \fBpp\fP\&.
.SH AUTHOR
Chef
.\" Generated by docutils manpage writer.
.
