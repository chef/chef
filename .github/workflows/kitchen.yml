---
name: kitchen

"on":
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: kitchen-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: kitchen-tests

jobs:
  # test-kitchen-enterprise currently supports only kitchen-dokken driver for linux platforms,
  # so we are testing on windows by running chef-client in local mode using habitat package of Infra Client
  win_x86_64:
    name: win_x86_64_hab
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2022
          - windows-2025
    runs-on: ${{ matrix.os }}
    env:
      CHEF_LICENSE: accept-no-persist
      CHEF_LICENSE_KEY: free-79df705d-b685-419a-8b68-88401f74ff72-3999
      HAB_ORIGIN: gha
      HAB_BLDR_CHANNEL: base-2025
      HAB_REFRESH_CHANNEL: base-2025
      HAB_AUTH_TOKEN: ${{ secrets.HAB_AUTH_TOKEN }}
    steps:
    - uses: actions/checkout@v4

    - name: Install Habitat CLI
      run: |
        # Install Habitat using Chocolatey
        choco install -y habitat
        refreshenv
        # Ensure hab is in PATH
        $env:PATH = "C:\Program Files\Habitat;" + $env:PATH
        echo "PATH=$env:PATH" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        hab license accept
        hab --version

    - name: Generate Habitat Origin Key
      run: |
        hab origin key generate "$env:HAB_ORIGIN"

    - name: Build Habitat Package
      run: |
        # Move to repo root
        cd ..
        hab pkg build .

        # Find the built package
        $pkg_path = Get-ChildItem -Path "results" -Filter "$env:HAB_ORIGIN-chef-infra-client-*.hart" |
                    Sort-Object LastWriteTime -Descending |
                    Select-Object -First 1

        if ($pkg_path) {
            Write-Host "Built package: $($pkg_path.Name)"
            Copy-Item $pkg_path.FullName -Destination "kitchen-tests\chef-infra-client-latest.hart"
        } else {
            Write-Error "No package built"
            Exit 1
        }

    - name: Install Chef Infra Client Habitat Package
      run: |
        hab pkg install chef-infra-client-latest.hart
        hab pkg exec $env:HAB_ORIGIN/chef-infra-client chef-client --version

    - name: Run End-to-End Tests in Local Mode
      run: |
        Write-Host "Processing policy file..."
        hab pkg exec $env:HAB_ORIGIN/chef-infra-client -- chef install

        # Verify policy.lock.json was created
        if (Test-Path "Policyfile.lock.json") {
          Write-Host "✅ Policy lock file created successfully"
        } else {
          Write-Error "Policy lock file was not created"
          Exit 1
        }

        # Create a minimal client.rb that uses the policy
        @"
        use_policyfile true
        policy_document_native_api true
        policy_name 'end_to_end'
        policy_group 'local'
        log_level :info
        chef_license 'accept-no-persist'
        "@ | Out-File -FilePath "client.rb" -Encoding utf8

        # Run chef-client with the policy
        Write-Host "Running chef-client with policy..."
        hab pkg exec $env:HAB_ORIGIN/chef-infra-client -- chef-client -z -c client.rb
        if ($LASTEXITCODE -ne 0) {
            Write-Error "Chef run failed"
            Exit $LASTEXITCODE
        }

        Write-Host "✅ All tests passed successfully"

  # test-kitchen-enterprise currently supports only kitchen-dokken driver for linux platforms,
  # so we are testing macos using community test-kitchen
  mac_x86_64:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
    runs-on: ${{ matrix.os }}
    env:
      CHEF_LICENSE: accept-no-persist
      KITCHEN_LOCAL_YAML: kitchen.exec.macos.yml
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
            clean: true
      - name: Install Chef
        uses: actionshub/chef-install@3.0.0
      - name: Kitchen Test
        run: kitchen test end-to-end-${{ matrix.os }}

  mac_arm64:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-14 # currently macos-latest
          - macos-15
    runs-on: ${{ matrix.os }}
    env:
      CHEF_LICENSE: accept-no-persist
      KITCHEN_LOCAL_YAML: kitchen.exec.macos.yml
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          clean: true
      - name: Install Chef
        uses: actionshub/chef-install@3.0.0
      - name: Kitchen Test
        run: kitchen test end-to-end-${{ matrix.os }}

  # end-to-end recipe testing using test-kitchen-enterprise and habitat package of Infra Client
  docr_lnx_x86_64:
    name: dokr_lnx_x86_64_hab
    strategy:
      fail-fast: false
      matrix:
        os:
          - amazonlinux-2023
          - almalinux-8
          - almalinux-9
          - debian-11
          - debian-12
          - fedora-40
          # fedora-latest
          - opensuse-leap-15
          - oraclelinux-8
          - oraclelinux-9
          - rockylinux-8
          - rockylinux-9
          - ubuntu-2004
          - ubuntu-2204
          # - ubuntu-2404
    runs-on: ubuntu-latest
    env:
      FORCE_FFI_YAJL: ext
      CHEF_LICENSE: accept-no-persist
      KITCHEN_LOCAL_YAML: kitchen.dokken.yml
      HAB_ORIGIN: gha # Set the dummy origin for this Github actions CI flow
      HAB_BLDR_CHANNEL: base-2025 # Explicitly set the builder channel
      HAB_REFRESH_CHANNEL: base-2025 # Explicitly set the refresh channel
      HAB_AUTH_TOKEN: ${{ secrets.HAB_AUTH_TOKEN }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install Habitat CLI
        run: |
          curl https://raw.githubusercontent.com/habitat-sh/habitat/main/components/hab/install.sh | sudo bash -s -- -c stable
          sudo hab license accept
          sudo hab --version
      - name: Install Test-Kitchen-Enterprise
        run: |
          sudo -E hab pkg install --binlink --force chef/chef-test-kitchen-enterprise --channel unstable
          kitchen --version
          # chef-cli is needed for some kitchen operations
          sudo -E hab pkg install --binlink --force chef/chef-cli --channel unstable
      - name: Generate fake Habitat Origin Key
        run: |
          hab origin key generate "$HAB_ORIGIN"
          # Export the keys for later use in the Docker container
          hab origin key export "$HAB_ORIGIN" > "$HAB_ORIGIN-key.tar.gz"
      - name: Build Habitat Package (for testing purpose only)
        run: |
          # Move out of default kitchen-tests dir to the repo root
          cd ..
          hab pkg build .
          source ./results/last_build.env
          cp "./results/$pkg_artifact" kitchen-tests/chef-infra-client-latest.hart
      - name: Set up HAB token file # Set up a token file to be mounted inside the dokken container
        run: |
          # Create a token file that can be mounted into containers
          echo "${{ secrets.HAB_AUTH_TOKEN }}" > hab_token
          chmod 600 hab_token
      - name: Kitchen Test
        run: |
          # Use this when turning on Inspec integration tests
          #kitchen test end-to-end-${{ matrix.os }}

          # Not running Inspec tests for now.
          kitchen converge end-to-end-${{ matrix.os }}
          kitchen destroy end-to-end-${{ matrix.os }}

  # test-kitchen-enterprise currently supports only kitchen-dokken driver for linux platforms,
  # so we are testing on linux VMs using community test-kitchen
  vm_lnx_x86_64:
    strategy:
      fail-fast: false
      matrix:
        os:
          - amazonlinux-2
          - amazonlinux-2023
          - almalinux-8
          - almalinux-9
          - debian-11
          - debian-12
          - fedora-40
          # - fedora-latest
          - opensuse-leap-15
          - oracle-7
          - oracle-8
          - oracle-9
          - rockylinux-8
          - rockylinux-9
          - ubuntu-2004
          - ubuntu-2204
          # - ubuntu-2404
    runs-on: ubuntu-22.04
    env:
      CHEF_LICENSE: accept-no-persist
      KITCHEN_LOCAL_YAML: kitchen.linux.ci.yml
    steps:
      - uses: actions/checkout@v4
      - name: Install Vagrant and VirtualBox
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          cat files/oracle_vbox_2016.asc | gpg --dearmor | sudo tee /usr/share/keyrings/oracle-virtualbox-2016.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/oracle-virtualbox-2016.gpg] https://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib" | sudo tee /etc/apt/sources.list.d/virtualbox.list
          sudo apt-get update
          sudo apt-get install -y vagrant virtualbox-7.1
          sudo vagrant --version
          sudo VBoxManage --version
      - name: Install Chef
        uses: actionshub/chef-install@3.0.0
      - name: Kitchen Test
        run: |
          # To debug, uncomment these
          #export VAGRANT_LOG=debug
          #export VBOX_LOG=all.e.l.f
          #export VBOX_LOG_DEST=stdout
          #export K_DEBUG_OPTS="--log-level=debug"
          export LOGNAME=$USER
          kitchen test end-to-end-${{ matrix.os }} $K_DEBUG_OPTS
