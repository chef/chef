= Chef

= DESCRIPTION:

Chef is a configuration management tool designed to bring automation to your entire infrastructure.

The Chef Wiki is the definitive source of user documentation.

* http://wiki.opscode.com/display/chef/Home

This README focuses on developers who want to modify Chef source code. For users who just want to run the latest and greatest Chef development version in their environment, see:

* http://wiki.opscode.com/display/chef/Installing+Chef+from+HEAD

= DEVELOPMENT:

Before working on the code, if you plan to contribute your changes, you need to read the Opscode Contributing document.

* http://wiki.opscode.com/display/opscode/Contributing

You will also need to set up the repository with the appropriate branches. We document the process on the Chef Wiki.

* http://wiki.opscode.com/display/opscode/Working+with+Git

Once your repository is set up, you can start working on the code. We do use BDD/TDD with RSpec and Cucumber, so you'll need to get a development environment running.

= ENVIRONMENT:

In order to have a development environment where changes to the Chef code can be tested, we'll need to install a few things after setting up the Git repository.

== Requirements:

Install these via your platform's preferred method; for example apt, yum, ports, emerge, etc.

* Git
* CouchDB

Install the following RubyGems.

* ohai
* rake
* rspec
* cucumber
* merb-core
* rails

Ohai is also by Opscode and available on GitHub, http://github.com/opscode/ohai/tree/master.

roman-merb_cucumber is available from GitHub:

  gem install --source http://gems.github.com/ roman-merb_cucumber

== Starting the Environment:

Once everything is installed, run the dev:features rake task. Since the features do integration testing, root access is required.

  sudo rake dev:features

The dev:features task:

* Installs chef, chef-server, chef-server-slice gems. It will fail if required gems above are missing.
* Starts chef-server on ports 4000 and 4001.
* Starts chef-indexer.
* Starts CouchDB on port 5984.
* Starts the stompserver on port 61613.

You'll know its running when you see:

   ~ Activating slice 'ChefServerSlice' ...
  merb : worker (port 4000) ~ Starting Mongrel at port 4000
  merb : worker (port 4000) ~ Successfully bound to port 4000
  merb : worker (port 4001) ~ Starting Mongrel at port 4001
  merb : worker (port 4001) ~ Successfully bound to port 4001

You'll want to leave this terminal running the dev environment.

== Web Interface:

With the dev environment running, you can now access the web interface via http://localhost:4000/. Supply an OpenID to log in.

== Spec testing:

We use RSpec for unit/spec tests.

  rake spec

This doesn't actually use the development environment, because it does the testing on all the Chef internals. For integration/usage testing, we use Cucumber features.

== Integration testing:

We test integration with Cucumber. The available feature tests are rake tasks:

  rake features                            # Run Features with Cucumber
  rake features:api                        # Run Features with Cucumber
  rake features:client                     # Run Features with Cucumber
  rake features:provider:package:macports  # Run Features with Cucumber
  rake features:provider:remote_file       # Run Features with Cucumber
  rake features:search                     # Run Features with Cucumber

= LINKS:

Source:

* http://github.com/opscode/chef/tree/master

Tickets/Issues:

* http://tickets.opscode.com/

Documentation:

* http://wiki.opscode.com/display/chef/Home/

= LICENSE:

Chef - A configuration management system

Author:: Adam Jacob (<adam@opscode.com>)
Copyright:: Copyright (c) 2008, 2009 Opscode, Inc.
License:: Apache License, Version 2.0

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
