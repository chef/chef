.content
  .inner
    = form(:action => form_url, :method => :post, :id => form_id, :class => 'form') do
      -if form_for == "login"
        %div.group
          .text_field= text_field :id => "user_name", :name => "name", :label => "Username: ", :value => params.has_key?(:name) ? h(params[:name]) : @user.name
        %br/

        %div.group
          .text_field= password_field :id=> "password", :name => "password", :label=>"Password: ", :class => "password_field"
        %br/
        =link_to("Or, log in with OpenID if you have one associated with an existing user account.", url(:openid_consumer))
        %br/

      - if form_for == "edit"
        %div.group.form
          %label.label New Password
          = password_field :id=>"user_new_password", :name => "new_password", :class =>"password_field"
          %span.description New password for the User. Keep blank if you do not want to change password.

        %div.group.form
          %label.label Confirm New Password
          = password_field :id=>"user_confirm_new_password", :name => "confirm_new_password", :class =>"password_field"
          %span.description Confirm new password for the User. Keep blank if you do not want to change password.

        - if is_admin? && !is_last_admin?
          %div.group.form
            %label.label Admin
            %input{ :type => "hidden", :name => "admin", :value => 0 }
            %input{ :type => "checkbox", :name => "admin", :value => 1, :checked => @user.admin }
            %span.description Whether or not the User is an admin.

        %div.group.form
          %label.label OpenID Association
          = text_field :id => "openid", :name => "openid", :class => "text_field", :value => @user.openid
          %span.description Associate an OpenID with the user account, leave blank if you do not want to associate one.

      %div.group
        .actions-bar
          .actions= submit submit_name, :id => submit_id, :class => 'button'
