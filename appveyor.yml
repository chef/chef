version: "master-{build}"

os: Previous Visual Studio 2013
platform:
  - x64

environment:
  matrix:
    - spec_type_and_ruby_version: "all$23-x64"
    - spec_type_and_ruby_version: "all$23"
    - spec_type_and_ruby_version: "time_consuming$23-x64"
    - spec_type_and_ruby_version: "time_consuming$23"

clone_folder: c:\projects\chef
clone_depth: 1
skip_tags: true
branches:
  only:
    - master
    - chef-12

install:
  - systeminfo
  - winrm quickconfig -q
  - ps: $env:spec_to_run=$env:spec_type_and_ruby_version.split("$")[0]
  - ps: $env:ruby_version=$env:spec_type_and_ruby_version.split("$")[1]
  - SET PATH=C:\Ruby%ruby_version%\bin;%PATH%
  - echo %PATH%
  - ps: $env:OMNIBUS_RUBYGEMS=$(findstr rubygems omnibus_overrides.rb | %{ $_.split(" ")[3] })
  - echo %OMNIBUS_RUBYGEMS%
  - ps: $env:OMNIBUS_BUNDLER=$(findstr bundler omnibus_overrides.rb | %{ $_.split(" ")[3] })
  - echo %OMNIBUS_BUNDLER%
  - ruby --version
  - gem --version
  - bundler --version
  - gem uninstall bundler -a -x
  - gem update --system %OMNIBUS_RUBYGEMS% || gem update --system %OMNIBUS_RUBYGEMS% || gem update --system %OMNIBUS_RUBYGEMS%
  - gem install bundler -v %OMNIBUS_BUNDLER% --quiet --no-ri --no-rdoc || gem install bundler -v %OMNIBUS_BUNDLER% --quiet --no-ri --no-rdoc || gem install bundler -v %OMNIBUS_BUNDLER% --quiet --no-ri --no-rdoc
  - gem --version
  - bundler --version
  - SET BUNDLE_WITHOUT=server:docgen:maintenance:pry:travis:integration:ci
  - appveyor DownloadFile http://curl.haxx.se/ca/cacert.pem -FileName C:\cacert.pem
  - set SSL_CERT_FILE=C:\cacert.pem
  - bundle env

build_script:
  - bundle install || bundle install || bundle install

test_script:
  - SET SPEC_OPTS=--format progress
  - if "%spec_to_run%" == "all" (bundle exec rake spec) else (bundle exec rspec ./spec/functional/resource/powershell_script_spec.rb & bundle exec rspec ./spec/functional/resource/dsc_script_spec.rb & bundle exec rspec ./spec/functional/resource/chocolatey_package_spec.rb & bundle exec rspec ./spec/functional/resource/windows_task_spec.rb)
  